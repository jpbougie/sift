%li.entry.closed{ :id => "entry_#{entry.id}" }
  .summary
    .box
      %input{ :type => "checkbox" }
    %ul.rating
      - for i in 1..5
        %li.star
          %a{ :href => "#", :class => (entry.rating && i <= entry.rating) ? "active" : "" }= i.to_s
    .meta
      %h4
        %a{ :href => "#entry/#{entry.id}"}= entry.entry
  .details.hidden
    - if entry.stanford
      #splitting-techniques.technique-container
        %h3 Splitting techniques
        #firstlevel.technique
          %h4 First-level split
          = make_stars(entry.features_rating && entry.features_rating["firstlevel"])
          %ol
            - for split in entry.stanford["firstlevelsplit"]["result"]
              %li
                %h5.phrase= split["part"]
                %ol
                  - for object in split["objects"]
                    %li= object["value"]
        #clauses.technique.last
          %h4 Clause Split
          = make_stars(entry.features_rating && entry.features_rating["clauses"])
          %ol
            - for split in entry.stanford["clausesplit"]["result"]
              %li
                %h5.phrase= split["part"]
                %ol
                  - for object in split["objects"]
                    %li= object["value"]

      #domain-extraction.technique-container
        %h3 Domain Extraction
        #simple-wndomains.technique
          %h4 Simple WordNet domains with tf-idf
          %ul.rating
            = make_stars(entry.features_rating && entry.features_rating["simple-wndomains"])
          %ol
            - for domain in entry.stanford["wordnet-firstlevelsplit"]["result"]
              %li
                %ol.domain
                  - for possibility in domain
                    %li= possibility
      %div{:style => "clear: both"}
        %em Rate each feature individually using the stars
    - else
      %em This entry hasn't been parsed yet